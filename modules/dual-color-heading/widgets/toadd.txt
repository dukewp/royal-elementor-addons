	protected function _content_template()
	{
	?>
		<# view.addInlineEditingAttributes('icon_1', 'basic' ); view.addInlineEditingAttributes( 'title' , 'none' ); view.addInlineEditingAttributes( 'description' , 'basic' ); view.addInlineEditingAttributes( 'content' , 'advanced' ); #>
			<div class="widgetcont">
				<div {{{ view.getRenderAttributeString( 'icon_1' ) }}} class="iconcont">
					{{{ settings.icon_1 }}}
				</div>
				<h2 {{{ view.getRenderAttributeString( 'title' ) }}}>{{{ settings.title }}}</h2>
				<div {{{ view.getRenderAttributeString( 'description' ) }}}>{{{ settings.description }}}</div>
				<div {{{ view.getRenderAttributeString( 'content' ) }}}>{{{ settings.content }}}</div>
			</div>
	<?php
	}


    //////controools

    $this->start_controls_tabs(
			'style_tabs'
		);

		$this->start_controls_tab(
			'style_normal_tab',
			[
				'label' => __('Normal', 'plugin-name'),
			]
		);

		$this->add_control(
			'bg-color',
			[
				'label' => __('Bg-Color', 'wpr-addons'),
				'type' => \Elementor\Controls_Manager::COLOR,
				'default' => 'transparent',
				'selectors' => [
					'{{WRAPPER}} .description' => 'background-color: {{VALUE}}',
				],
			]
		);

		$this->add_control(
			'color',
			[
				'label' => __('Text Color', 'wpr-addons'),
				'type' => \Elementor\Controls_Manager::COLOR,
				'default' => '#fff',
				'selectors' => [
					'{{WRAPPER}} .description' => 'color: {{VALUE}}',
				],
			]
		);
		$this->add_responsive_control(
			'letter_spacing',
			[
				'label' => __('Spacing', 'plugin-name'),
				'type' => \Elementor\Controls_Manager::SLIDER,
				'range' => [
					'px' => [
						'min' => 0,
						'max' => 100,
					],
				],
				'devices' => ['desktop', 'tablet', 'mobile'],
				'desktop_default' => [
					'size' => 30,
					'unit' => 'px',
				],
				'tablet_default' => [
					'size' => 20,
					'unit' => 'px',
				],
				'mobile_default' => [
					'size' => 10,
					'unit' => 'px',
				],
				'selectors' => [
					'{{WRAPPER}} .description' => 'letter-spacing: {{SIZE}}{{UNIT}};',
				],
			]
		);

		$this->try_my_paddings('title_padding', 'Padding', ' .h2');


		$this->end_controls_tab();

		$this->start_controls_tab(
			'style_hover_tab',
			[
				'label' => __('Hover', 'plugin-name'),
			]
		);

		$this->add_control(
			'bg-color-hover',
			[
				'label' => __('Bg-Color-Hover', 'wpr-addons'),
				'type' => \Elementor\Controls_Manager::COLOR,
				'default' => '',
				'selectors' => [
					'{{WRAPPER}} .description:hover' => 'background-color: {{VALUE}}',
				],
			]
		);
		$this->add_control(
			'color-hover',
			[
				'label' => __('Text Color Hover', 'wpr-addons'),
				'type' => \Elementor\Controls_Manager::COLOR,
				'default' => '',
				'selectors' => [
					'{{WRAPPER}} .description:hover' => 'color: {{VALUE}}',
				],
			]
		);
		$this->add_control(
			'cursor_style',
			[
				'label' => __('Cursor Style', 'plugin-domain'),
				'type' => \Elementor\Controls_Manager::SELECT,
				'default' => 'pointer',
				'options' => [
					'arrow'  => __('arrow', 'plugin-domain'),
					'pointer' => __('pointer', 'plugin-domain'),
				],
				'selectors' => [
					'{{WRAPPER}} .description:hover' => 'cursor: {{VALUE}}',
				],
			]
		);

        
		$this->end_controls_tab();

		$this->end_controls_tabs();
